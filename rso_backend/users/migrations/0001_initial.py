# Generated by Django 4.2.7 on 2023-11-20 15:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название направления')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'направления',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, default='', max_length=40, verbose_name='Отчество')),
                ('last_name_lat', models.CharField(blank=True, default='', max_length=40, verbose_name='Фамилия (латиница)')),
                ('first_name_lat', models.CharField(blank=True, default='', max_length=40, verbose_name='Имя (латиница)')),
                ('patronymic_lat', models.CharField(blank=True, default='', max_length=40, verbose_name='Отчество (латиница)')),
                ('gender', models.CharField(blank=True, choices=[('', '-'), ('Мужской', 'Мужской'), ('Женский', 'Женский')], default='', max_length=10, verbose_name='Пол')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('telephone', models.CharField(blank=True, default='+7', max_length=30, verbose_name='Телефон')),
                ('unit_type', models.CharField(choices=[('detachment', 'Отряд'), ('other_unit', 'Другая структурная единица')], default='detachment', max_length=20, verbose_name='Тип структурной единицы')),
                ('study_institution', models.CharField(blank=True, default='', max_length=40, verbose_name='Образовательная организация')),
                ('study_faculty', models.CharField(blank=True, default='', max_length=40, verbose_name='Факультет')),
                ('study_group', models.CharField(blank=True, default='', max_length=20, verbose_name='Курс')),
                ('study_form', models.CharField(blank=True, choices=[('', '-'), ('очная', 'очная'), ('очно-заочная', 'очно-заочная'), ('вечерняя', 'вечерняя'), ('заочная', 'заочная'), ('дистанционная', 'дистанционная')], default='', max_length=15, verbose_name='Форма обучения')),
                ('study_year', models.CharField(blank=True, default='', max_length=10, verbose_name='Курс')),
                ('study_spec', models.CharField(blank=True, default='', max_length=40, verbose_name='Специальность')),
                ('SNILS', models.CharField(blank=True, default='', max_length=15, verbose_name='СНИЛС')),
                ('INN', models.CharField(blank=True, default='', max_length=15, verbose_name='ИНН')),
                ('pass_ser_num', models.CharField(blank=True, default='', max_length=15, verbose_name='Номер и серия паспорта')),
                ('pass_whom', models.CharField(blank=True, default='', max_length=15, verbose_name='Кем выдан паспорт')),
                ('pass_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('work_book_num', models.CharField(blank=True, default='', max_length=15, verbose_name='Трудовая книжка номер')),
                ('inter_pass', models.CharField(blank=True, default='', max_length=15, verbose_name='Загранпаспорт номер')),
                ('mil_reg_doc_type', models.CharField(blank=True, choices=[('', '-'), ('Приписной', 'Удостоверение гражданина пожлежащего вызову на срочную военную службу'), ('Военник', 'Военный билет')], default='', max_length=10, verbose_name='Тип документа воинского учета')),
                ('mil_reg_doc_ser_num', models.CharField(blank=True, default='', max_length=15, verbose_name='Номер и серия документа воинского учета')),
                ('reg_town', models.CharField(blank=True, default='', max_length=40, verbose_name='Населенный пункт прописки')),
                ('reg_house', models.CharField(blank=True, default='', max_length=40, verbose_name='Улица,дом,кв прописки')),
                ('reg_fac_same_address', models.BooleanField(default=False, verbose_name='Адреса регистрации и фактический совпадают')),
                ('fact_town', models.CharField(blank=True, default='', max_length=40, verbose_name='Населенный пункт проживания')),
                ('fact_house', models.CharField(blank=True, default='', max_length=40, verbose_name='Улица,дом,кв проживания')),
                ('about', models.CharField(blank=True, default='', max_length=400, verbose_name='О себе')),
                ('social_vk', models.CharField(blank=True, default='https://vk.com/', max_length=50, verbose_name='Ссылка на ВК')),
                ('social_tg', models.CharField(blank=True, default='https://t.me/', max_length=50, verbose_name='Ссылка на Телеграм')),
                ('banner', models.ImageField(blank=True, upload_to='users/banner/%Y/%m/%d', verbose_name='Баннер личной страницы')),
                ('photo', models.ImageField(blank=True, upload_to='users/avatar/%Y/%m/%d', verbose_name='Аватарка')),
                ('photo1', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 1')),
                ('photo2', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 2')),
                ('photo3', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 3')),
                ('photo4', models.ImageField(blank=True, upload_to='users/photo/%Y/%m/%d', verbose_name='Фото 4')),
                ('privacy_telephone', models.CharField(choices=[('1', 'Все'), ('2', 'Члены отряда'), ('3', 'Руководство')], default='1', max_length=15, verbose_name='Кто видит номер телефона')),
                ('privacy_email', models.CharField(choices=[('1', 'Все'), ('2', 'Члены отряда'), ('3', 'Руководство')], default='1', max_length=15, verbose_name='Кто видит электронную почту')),
                ('privacy_social', models.CharField(choices=[('1', 'Все'), ('2', 'Члены отряда'), ('3', 'Руководство')], default='1', max_length=15, verbose_name='Кто видит мои ссылки на соц сети')),
                ('privacy_about', models.CharField(choices=[('1', 'Все'), ('2', 'Члены отряда'), ('3', 'Руководство')], default='1', max_length=15, verbose_name='Кто видит информацию обо мне')),
                ('privacy_photo', models.CharField(choices=[('1', 'Все'), ('2', 'Члены отряда'), ('3', 'Руководство')], default='1', max_length=15, verbose_name='Кто видит мои фотографии')),
                ('membership_fee', models.BooleanField(default=False, verbose_name='Членский взнос оплачен')),
                ('position', models.CharField(blank=True, choices=[('', 'Без должности'), ('Комиссар', 'Комиссар'), ('Мастер-методист', 'Мастер-методист'), ('Специалист', 'Специалист'), ('Командир', 'Командир')], default='', max_length=20, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'профили',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('branch', models.CharField(db_index=True, default='региональное отделение', max_length=100, verbose_name='Региональное отделение')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'регионы',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('about', models.CharField(blank=True, default='', max_length=500, verbose_name='Описание')),
                ('emblem', models.ImageField(blank=True, upload_to='emblems/%Y/%m/%d', verbose_name='Эмблема')),
                ('social_vk', models.CharField(blank=True, default='https://vk.com/', max_length=50, verbose_name='Ссылка ВК')),
                ('social_tg', models.CharField(blank=True, default='https://', max_length=50, verbose_name='Ссылка Телеграм')),
                ('banner', models.ImageField(blank=True, upload_to='emblems/%Y/%m/%d', verbose_name='Баннер')),
                ('slogan', models.CharField(blank=True, default='', max_length=100, verbose_name='Девиз')),
                ('founding_date', models.DateField(blank=True, null=True, verbose_name='Дата основания')),
                ('commander', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='commander', to='users.profile', verbose_name='Командир')),
            ],
            options={
                'verbose_name': 'Структурная единица',
                'verbose_name_plural': 'структурные единицы',
            },
        ),
        migrations.CreateModel(
            name='Detachment',
            fields=[
                ('unit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.unit')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.area', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Отряд',
                'verbose_name_plural': 'отряды',
            },
            bases=('users.unit',),
        ),
        migrations.AddField(
            model_name='profile',
            name='fact_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fact', to='users.region', verbose_name='Регион проживания'),
        ),
        migrations.AddField(
            model_name='profile',
            name='reg_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reg', to='users.region', verbose_name='Регион прописки'),
        ),
        migrations.AddField(
            model_name='profile',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.region', verbose_name='Регион ОО'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profile',
            name='detachment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.detachment', verbose_name='Отряд'),
        ),
    ]
