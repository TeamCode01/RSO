from datetime import date
import time
import traceback

from users.models import UserMembershipLogs
from competitions.models import September15Participant


IDS_NOT_TO_INCLUDE = [
    17828, 8477, 17954, 7091, 25354, 25326, 28493, 22420, 16105, 23210, 24313, 25252, 18418, 20613, 699, 20045, 21352, 
    22335, 28481, 24739, 23581, 22310, 20983, 6900, 20070, 21666, 20450, 21944, 20196, 25125, 26078, 25114, 28556, 
    19050, 22426, 20385, 20087, 22448, 24311, 23213, 20614, 24110, 25354, 25326, 28493, 7091, 16105, 22420, 24313, 
    23210, 18418, 25252, 699, 20613, 20045, 21352, 22335, 24739, 28481, 22310, 23581, 20983, 6900, 20070, 20450, 21666, 
    21944, 20196, 26078, 25125, 25114, 22426, 19050, 28556, 20385, 20087, 22448, 24311, 20614, 23213, 24110, 14651, 
    21443, 7121, 25128, 21616, 22676, 18434, 20733, 20910, 21627, 5012, 20798, 21311, 26282, 20042, 20972, 23483, 20130, 
    20163, 20044, 20092, 22450, 25432, 26286, 20850, 21961, 20143, 25124, 23457, 20177, 20932, 25312, 20049, 20051, 
    29050, 20281, 24245, 28650, 28480, 24264, 20945, 21639, 20973, 25258, 26351, 20392, 14207, 24117, 20922, 20142, 
    29051, 25110, 29377, 20671, 14626, 20620, 25936, 25781, 17001, 25697, 23961, 20406, 26182, 21406, 20388, 26750, 
    20097, 20039, 20857, 24317, 21203, 20052, 25826, 20165, 24706, 12837, 4621, 29938, 4621, 29938, 14546, 1337, 14582, 
    21727, 29718, 21682, 8499, 25326, 25354, 28493, 7091, 22420, 16105, 24313, 23210, 18418, 25252, 699, 20045, 20613, 
    21352, 22335, 24739, 28481, 23581, 22310, 20983, 6900, 20070, 20450, 
    21666, 20196, 26078, 21944, 25125, 25114, 28556, 
    19050, 22426, 20385, 20087, 22448, 20614, 24311, 14651, 23213, 21443, 
    24110, 7121, 25128, 21616, 22676, 18434, 20733, 
    20910, 21627, 5012, 20798, 21311, 26282, 20972, 20042, 23483, 20163, 
    20130, 20044, 22450, 20092, 25432, 20850, 26286, 
    21961, 20143, 25124, 23457, 20177, 20932, 20049, 25312, 20392, 20051, 
    29050, 20281, 24245, 28480, 28650, 24264, 20945, 
    20973, 21639, 25258, 14207, 26351, 24117, 29051, 20922, 25110, 20142, 
    29377, 20671, 14626, 20620, 17001, 25697, 25936, 
    25781, 26182, 23961, 20406, 21406, 26750, 20388, 20097, 20039, 24317, 
    21203, 20857, 20052, 25826, 20165, 24706, 12837, 
    21407, 26752, 24164, 26698, 24267, 23741, 21404, 23601, 20917, 21416, 
    20267, 20645, 21518, 26302, 25431, 25122, 28519, 
    24983, 20076, 21532, 21300, 21206, 20602, 21449, 16995, 20047, 26299, 
    16106, 20785, 26281, 22538, 10740, 24069, 20996, 
    20055, 24253, 28492, 7937, 24523, 19834, 14855, 17871, 8393, 15113, 8743, 20075, 4049, 25746, 28183, 3700, 16486, 
    7338, 16201, 15944, 8041, 26173, 15964, 21547, 5330, 28884, 20269, 5557, 5661, 17690, 5083, 14858, 29049, 27552, 
    7489, 7564, 25506, 28881, 15160, 7651, 4635, 18083, 4991, 18005, 4051, 1958, 25389, 23441, 8479, 12292, 17493, 
    10525, 14852, 25502, 18097, 15385, 6994, 6873, 7784, 12275, 15340, 17707, 10719, 3943, 30016, 14927, 16537, 
    29247, 25649, 7132, 5512, 11210, 19475, 20616, 12322, 28528, 21405, 552, 25352, 7457, 28198, 6624, 7372, 9915, 
    10630, 29840, 16431, 3786, 14261, 8537, 26862, 17397, 16624, 12891, 4045, 4077, 29094, 16221, 15152, 4635, 17493, 
    19989, 21409, 4047, 26190, 16147, 3687, 16486, 12911, 21964, 6435, 27552, 6343, 30266, 11660, 8476, 11358, 23123, 
    14502, 3695, 6970, 5495, 7670, 5652, 17772, 17804, 5745, 8276, 12231, 5161, 8049, 4861, 29400, 14391, 11961, 28252, 
    16147, 8964, 20403, 5801, 22424, 14857, 25324, 23211, 20341, 20618, 22415, 6872, 7078, 6602, 6872, 7946, 11173, 
    10630, 16670, 15771, 14004, 10800, 26172, 25746, 21836, 15313, 5625, 26159, 7376, 15964, 12068, 18083, 10525, 
    21603, 7132, 8211, 16349, 7730, 4174, 3700, 5628, 3806, 12899, 27450, 20269, 7489, 18005, 23247, 10719, 24717, 
    2859, 17960, 10189, 8445, 15851, 27045, 15278, 12046, 26484, 28705, 5937, 15999, 7655, 21369, 7063, 9645, 26468, 
    26862, 6398, 4152, 7983, 5394, 7925, 11986, 26201, 20272, 3882, 20947, 7995, 7366, 7904, 8775, 10215, 16133, 8537, 
    14004, 4049, 20219, 28183, 3687, 8027, 7135, 15747, 28884, 29049, 17590, 22542, 17707, 5512, 5677, 5349, 15015, 
    4152, 7644, 5394, 4615, 3804, 7000, 7622, 7564, 4051, 15385, 3943, 19475, 17943, 14830, 7305, 1469, 11995, 20363, 
    18986, 11410, 11188, 8914, 7768, 4689, 15285, 27429, 9383, 21494, 4548, 5299, 19463, 26190, 4174, 7644, 17818, 4669,
    11526, 21614, 20737, 20492, 25136, 20178, 24248, 26971, 21102, 28188, 7995, 7946, 28188, 6938, 29840, 28694, 
    16397, 16810, 11181, 4456, 23036, 28252, 5480, 17725, 3681, 7601, 21964, 21547, 27552, 4991, 7643, 11660, 8476, 
    20876, 7349, 28938, 7856, 8964, 4144, 8278, 6042, 13629, 8394, 18362, 24624, 18097, 30016, 17825, 7017, 10839, 
    17843, 7997, 26096, 22134, 7168, 7747, 4260, 18555, 12042, 6327, 17491, 19012, 6233, 14885, 13808, 28938, 7856, 
    25627, 19734, 12052, 20976, 25323, 20041, 18419, 20689, 21922, 21463, 28534, 7078, 6872, 9915, 7457, 7372, 11581, 
    21317, 16417, 15951, 25956, 28929, 6398, 7297, 20405, 8256, 15360, 12899, 15944, 5330, 12261, 18005, 14852, 14833, 
    11210, 13076, 30269, 9779, 26310, 7983, 20403, 7338, 7925, 7659, 8321, 28881, 1958, 26245, 3745, 10554, 26943, 
    23387, 10321, 15139, 6237, 7645, 5789, 18049, 5278, 3980, 17693, 6034, 21504, 13617, 17350, 13627, 10862, 7395, 
    20276, 16349, 12905, 18556, 20544, 17770, 9870, 15117, 20043, 20077, 26284, 20963, 16964, 20082, 1277, 26288, 
    6938, 7457, 6596, 7859, 7078, 29851, 29839
]


def count_september_30_members_number():
    verifications_after_15 = UserMembershipLogs.objects.filter(
        date__gt=date(2024, 9, 15), date__lt=date(2024, 10, 1), status='Изменен на "оплачен"'
    )
    print(f'verifications_after_15 count: {verifications_after_15.count()}')
    time.sleep(3)
    for verification in verifications_after_15:
        if verification.user.id in IDS_NOT_TO_INCLUDE:
            continue
        try:
            user_detachment_position = verification.user.userdetachmentposition
        except Exception as e:
            print(traceback.format_exc())
            continue
        try:
            september_15_inst = September15Participant.objects.get(
                detachment=user_detachment_position.headquarter
            )
        except September15Participant.DoesNotExist:
            continue
        print(
            f'Нашли верифицированного юзера {verification.user} для отряда '
            f'{user_detachment_position.headquarter}. Обновляем значение оплативших чл. взнос '
            f'{september_15_inst.members_number} на 1'
        )
        september_15_inst.members_number += 1
        september_15_inst.save()
