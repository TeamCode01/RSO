# Generated by Django 4.2.7 on 2024-03-16 12:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('headquarters', '0029_alter_centralheadquarter_name_alter_detachment_name_and_more'),
        ('competitions', '0005_alter_q13reportdata_q13_data_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Q13Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveSmallIntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Итоговое место по показателю')),
                ('detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.detachment', verbose_name='Отряд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Q13TandemRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveSmallIntegerField(verbose_name='Итоговое место по показателю')),
                ('detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_main_detachment', to='headquarters.detachment', verbose_name='Отряд-наставник')),
                ('junior_detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_junior_detachment', to='headquarters.detachment', verbose_name='Младший отряд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Q18DetachmentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('participants_number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)], verbose_name='Количество бойцов, принявших участие во Всероссийском дне ударного труда')),
                ('june_15_detachment_members', models.PositiveSmallIntegerField()),
                ('score', models.FloatField(verbose_name='Очки')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_competition_reports', to='competitions.competitions')),
                ('detachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_detachment_reports', to='competitions.competitions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Q18Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveSmallIntegerField(verbose_name='Итоговое место по показателю')),
                ('detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.detachment', verbose_name='Отряд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Q18TandemRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveSmallIntegerField(verbose_name='Итоговое место по показателю')),
                ('detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_main_detachment', to='headquarters.detachment', verbose_name='Отряд-наставник')),
                ('junior_detachment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_junior_detachment', to='headquarters.detachment', verbose_name='Младший отряд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='q13reportdata',
            name='q13_data',
        ),
        migrations.RemoveField(
            model_name='q13reportdata',
            name='q13_report',
        ),
        migrations.RemoveField(
            model_name='q13detachmentreport',
            name='is_verified',
        ),
        migrations.RemoveField(
            model_name='q13detachmentreport',
            name='organization_data',
        ),
        migrations.AddField(
            model_name='q13eventorganization',
            name='detachment_report',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='organization_data', to='competitions.q13detachmentreport', verbose_name='Отчет отряда'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='q13eventorganization',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='q13detachmentreport',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_competition_reports', to='competitions.competitions'),
        ),
        migrations.AlterField(
            model_name='q13detachmentreport',
            name='detachment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_detachment_reports', to='competitions.competitions'),
        ),
        migrations.DeleteModel(
            name='Q13Record',
        ),
        migrations.DeleteModel(
            name='Q13ReportData',
        ),
    ]
