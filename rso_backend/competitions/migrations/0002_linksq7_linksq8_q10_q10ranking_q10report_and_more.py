# Generated by Django 4.2.7 on 2024-03-22 15:05

import competitions.models
import competitions.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        (
            "headquarters",
            "0029_alter_centralheadquarter_name_alter_detachment_name_and_more",
        ),
        ("competitions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LinksQ7",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.URLField(max_length=500, verbose_name="Ссылка")),
            ],
            options={
                "verbose_name": "Ссылка на фотоотчет участия СО в окружном или межрегиональном мероприятии",
                "verbose_name_plural": "Ссылки на фотоотчет участия СО в окружных и межрегиональных мероприятиях",
            },
        ),
        migrations.CreateModel(
            name="LinksQ8",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.URLField(max_length=500, verbose_name="Ссылка")),
            ],
            options={
                "verbose_name": "Ссылка на фотоотчет участия СО во всероссийском мероприятии",
                "verbose_name_plural": "Ссылки на фотоотчет участия СО во всероссийских мероприятиях",
            },
        ),
        migrations.CreateModel(
            name="Q10",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "prize_place",
                    models.IntegerField(
                        choices=[
                            (1, "Первое место"),
                            (2, "Второе место"),
                            (3, "Третье место"),
                        ],
                        verbose_name="Призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Призовое место во всероссийских мероприятиях и конкурсах РСО",
                "verbose_name_plural": "Призовые места во всероссийских мероприятиях и конкурсах РСО",
            },
        ),
        migrations.CreateModel(
            name="Q10Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 10"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 10 показателю",
                "verbose_name_plural": "Места по 10 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q10Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                        verbose_name="Среднее призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 10 показателю",
                "verbose_name_plural": "Отчеты по 10 показателям",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q10TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 10"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 10 показателю",
                "verbose_name_plural": "Тандем-места по 10 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q11",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "prize_place",
                    models.IntegerField(
                        choices=[
                            (1, "Первое место"),
                            (2, "Второе место"),
                            (3, "Третье место"),
                        ],
                        verbose_name="Призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Призовое место в окружных и межрегиональных трудовых проектах",
                "verbose_name_plural": "Призовые места в окружных и межрегиональных трудовых проектах",
            },
        ),
        migrations.CreateModel(
            name="Q11Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 11"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 11 показателю",
                "verbose_name_plural": "Места по 11 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q11Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                        verbose_name="Среднее призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 11 показателю",
                "verbose_name_plural": "Отчеты по 11 показателям",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q11TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 11"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 11 показателю",
                "verbose_name_plural": "Тандем-места по 11 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q12",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "prize_place",
                    models.IntegerField(
                        choices=[
                            (1, "Первое место"),
                            (2, "Второе место"),
                            (3, "Третье место"),
                        ],
                        verbose_name="Призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Призовое место на всероссийскихтрудовых проектах",
                "verbose_name_plural": "Призовые места на всероссийских трудовых проектах",
            },
        ),
        migrations.CreateModel(
            name="Q12Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 12"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 12 показателю",
                "verbose_name_plural": "Места по 12 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q12Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                        verbose_name="Среднее призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 12 показателю",
                "verbose_name_plural": "Отчеты по 12 показателям",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q12TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 12"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 12 показателю",
                "verbose_name_plural": "Тандем-места по 12 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q13DetachmentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Q13EventOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("Спортивное", "Спортивное"),
                            ("Интеллектуальное", "Интеллектуальное"),
                            ("Творческое", "Творческое"),
                            ("Волонтерское", "Волонтерское"),
                            ("Внутреннее", "Внутреннее"),
                        ],
                        default="Внутреннее",
                        max_length=16,
                        verbose_name="Тип мероприятия",
                    ),
                ),
                (
                    "event_link",
                    models.URLField(max_length=500, verbose_name="Ссылка на пуб."),
                ),
                ("is_verified", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Q13Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        default=6,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(6),
                        ],
                        verbose_name="Итоговое место по показателю",
                    ),
                ),
            ],
            options={
                "verbose_name": "Места по 13 показателю",
                "verbose_name_plural": "Места по 13 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q13TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        default=12, verbose_name="Итоговое место по показателю"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-места по 13 показателю",
                "verbose_name_plural": "Тандем-места по 13 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q18DetachmentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "participants_number",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="Количество бойцов, принявших участие во Всероссийском дне ударного труда",
                    ),
                ),
                (
                    "june_15_detachment_members",
                    models.PositiveSmallIntegerField(default=1),
                ),
                ("score", models.FloatField(default=0, verbose_name="Очки")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Q18Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю"
                    ),
                ),
            ],
            options={
                "verbose_name": "Места по 18 показателю",
                "verbose_name_plural": "Места по 18 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q18TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-места по 18 показателю",
                "verbose_name_plural": "Тандем-места по 18 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q19Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 19"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 9 показателю",
                "verbose_name_plural": "Места по 19 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q19Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "safety_violations",
                    models.CharField(
                        choices=[
                            ("Отсутствуют", "Отсутствуют"),
                            ("Имеются", "Имеются"),
                        ],
                        default="Имеются",
                        max_length=16,
                        verbose_name="Нарушения техники безопасности",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 19 показателю",
                "verbose_name_plural": "Отчеты по 19 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q19TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Итоговое место по показателю 19",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 19 показателю",
                "verbose_name_plural": "Тандем-места по 19 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q1Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 1"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 1 показателю",
                "verbose_name_plural": "Места по 1 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q1Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Баллы за оплаченный членский взнос",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 1 показателю",
                "verbose_name_plural": "Отчеты по 1 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q1TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 1"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 1 показателю",
                "verbose_name_plural": "Тандем-места по 1 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q7",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "number_of_participants",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Количество участников",
                    ),
                ),
            ],
            options={
                "verbose_name": "Участие в окружных и межрегиональных мероприятиях",
                "verbose_name_plural": "Участия в окружных и межрегиональных мероприятиях",
            },
        ),
        migrations.CreateModel(
            name="Q7Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 7"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 7 показателю",
                "verbose_name_plural": "Места по 7 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q7Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Общее количество участий"
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 7 показателю",
                "verbose_name_plural": "Отчеты по 7 показателю",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q7TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 7"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 7 показателю",
                "verbose_name_plural": "Тандем-места по 7 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q8",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "number_of_participants",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Количество участников",
                    ),
                ),
            ],
            options={
                "verbose_name": "Участие во всероссийских мероприятиях",
                "verbose_name_plural": "Участия во всероссийских мероприятиях",
            },
        ),
        migrations.CreateModel(
            name="Q8Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 8"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 8 показателю",
                "verbose_name_plural": "Места по 8 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q8Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Общее количество участий"
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 8 показателю",
                "verbose_name_plural": "Отчеты по 8 показателю",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q8TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 8"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 8 показателю",
                "verbose_name_plural": "Тандем-места по 8 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q9",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        max_length=255, verbose_name="Название мероприятия"
                    ),
                ),
                (
                    "certificate_scans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=competitions.utils.get_certificate_scans_path,
                        verbose_name="Сканы сертификатов",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания заявки"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Подтверждено"),
                ),
                (
                    "prize_place",
                    models.IntegerField(
                        choices=[
                            (1, "Первое место"),
                            (2, "Второе место"),
                            (3, "Третье место"),
                        ],
                        verbose_name="Призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Призовое место в окружных и межрегиональных мероприятиях и конкурсах РСО",
                "verbose_name_plural": "Призовые места в окружных и межрегиональных мероприятиях и конкурсах РСО",
            },
        ),
        migrations.CreateModel(
            name="Q9Ranking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 9"
                    ),
                ),
            ],
            options={
                "verbose_name": "Место по 9 показателю",
                "verbose_name_plural": "Места по 9 показателю",
            },
        ),
        migrations.CreateModel(
            name="Q9Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                        verbose_name="Среднее призовое место",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отчет по 9 показателю",
                "verbose_name_plural": "Отчеты по 9 показателям",
            },
            bases=(competitions.models.CalcBase, models.Model),
        ),
        migrations.CreateModel(
            name="Q9TandemRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place",
                    models.PositiveSmallIntegerField(
                        verbose_name="Итоговое место по показателю 9"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тандем-место по 9 показателю",
                "verbose_name_plural": "Тандем-места по 9 показателю",
            },
        ),
        migrations.RemoveConstraint(
            model_name="competitionapplications",
            name="unique_tandem_application",
        ),
        migrations.RemoveConstraint(
            model_name="competitionparticipants",
            name="unique_tandem_participant",
        ),
        migrations.AddField(
            model_name="q9tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q9tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q9tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q9report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q9report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q9ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q9ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q9",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q9report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q8tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q8tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q8tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q8report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q8report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q8ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q8ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q8",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q8report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q7tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q7tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q7tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q7report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q7report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q7ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q7ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q7",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q7report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q1tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q1tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q1tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q1report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q1report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q1ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q1ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q19tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q19tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q19tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q19report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q19report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q19ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q19ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q18tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q18tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q18tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q18ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q18ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q18detachmentreport",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q18detachmentreport",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q13tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q13tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q13tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q13ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q13ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q13eventorganization",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organization_data",
                to="competitions.q13detachmentreport",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q13detachmentreport",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q13detachmentreport",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q12tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q12tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q12tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q12report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q12report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q12ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q12ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q12",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q12report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q11tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q11tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q11tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q11report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q11report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q11ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q11ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q11",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q11report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="q10tandemranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q10tandemranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_main_detachment",
                to="headquarters.detachment",
                verbose_name="Отряд-наставник",
            ),
        ),
        migrations.AddField(
            model_name="q10tandemranking",
            name="junior_detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_junior_detachment",
                to="headquarters.detachment",
                verbose_name="Младший отряд",
            ),
        ),
        migrations.AddField(
            model_name="q10report",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_competition_reports",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q10report",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_detachment_reports",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q10ranking",
            name="competition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="competitions.competitions",
                verbose_name="Конкурс",
            ),
        ),
        migrations.AddField(
            model_name="q10ranking",
            name="detachment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s",
                to="headquarters.detachment",
                verbose_name="Отряд",
            ),
        ),
        migrations.AddField(
            model_name="q10",
            name="detachment_report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="participation_data",
                to="competitions.q10report",
                verbose_name="Отчет отряда",
            ),
        ),
        migrations.AddField(
            model_name="linksq8",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="links",
                to="competitions.q8",
                verbose_name="Участие во всероссийских мероприятиях",
            ),
        ),
        migrations.AddField(
            model_name="linksq7",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="links",
                to="competitions.q7",
                verbose_name="Участие в окружных и межрегиональных мероприятиях",
            ),
        ),
        migrations.AddConstraint(
            model_name="q9",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_prize_places_in_distr_and_interreg_events",
            ),
        ),
        migrations.AddConstraint(
            model_name="q8",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_participation_in_all_russian_events",
            ),
        ),
        migrations.AddConstraint(
            model_name="q7",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_participation_in_distr_and_interreg_events",
            ),
        ),
        migrations.AddConstraint(
            model_name="q18detachmentreport",
            constraint=models.UniqueConstraint(
                fields=("competition", "detachment"),
                name="unique_report_q18detachmentreport",
            ),
        ),
        migrations.AddConstraint(
            model_name="q13detachmentreport",
            constraint=models.UniqueConstraint(
                fields=("competition", "detachment"),
                name="unique_report_q13detachmentreport",
            ),
        ),
        migrations.AddConstraint(
            model_name="q12",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_prize_places_in_all_russian_labor_projects",
            ),
        ),
        migrations.AddConstraint(
            model_name="q11",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_prize_places_in_distr_and_interreg_labor_projects",
            ),
        ),
        migrations.AddConstraint(
            model_name="q10",
            constraint=models.UniqueConstraint(
                fields=("detachment_report", "event_name"),
                name="unique_prize_places_in_all_russian_events",
            ),
        ),
        migrations.AddConstraint(
            model_name="linksq8",
            constraint=models.UniqueConstraint(
                fields=("event", "link"), name="unique_event_link_all_russian_events"
            ),
        ),
        migrations.AddConstraint(
            model_name="linksq7",
            constraint=models.UniqueConstraint(
                fields=("event", "link"),
                name="unique_event_link_distr_and_interreg_events",
            ),
        ),
    ]
