# Generated by Django 4.2.7 on 2025-07-31 16:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import regional_competitions_2025.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('headquarters', '0036_regionalheadquarteremail'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CHqRejectingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.BigIntegerField(verbose_name='Номер показателя')),
                ('report_id', models.BigIntegerField(verbose_name='Айди показателя')),
                ('reasons', models.JSONField(verbose_name='Причины отклонения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменений')),
            ],
            options={
                'verbose_name': 'Причины отклонений ЦШ по отчету',
                'verbose_name_plural': 'Причины отклонений ЦШ по отчетам',
            },
        ),
        migrations.CreateModel(
            name='ExpertRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
            ],
            options={
                'verbose_name': 'Роль эксперта',
                'verbose_name_plural': 'Роли экспертов',
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_place', models.PositiveSmallIntegerField(default=0, verbose_name='Лучшее региональное отделение по итогам года')),
                ('k_place', models.PositiveSmallIntegerField(default=0, verbose_name='Лучшее региональное отделение по комиссарской деятельности')),
                ('sum_overall_place', models.PositiveSmallIntegerField(default=0, verbose_name='Сумма мест по итогам года')),
                ('sum_k_place', models.PositiveSmallIntegerField(default=0, verbose_name='Сумма мест по комиссарской деятельности')),
                ('r1_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 1 показателю')),
                ('r1_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 1 показателю')),
                ('r2_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 2 показателю')),
                ('r2_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 2 показателю')),
                ('r3_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 3 показателю')),
                ('r3_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 3 показателю')),
                ('r4_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 4 показателю')),
                ('r4_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 4 показателю')),
                ('r5_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 5 показателю')),
                ('r5_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 5 показателю')),
                ('r6_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 6 показателю')),
                ('r6_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 6 показателю')),
                ('r7_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 7 показателю')),
                ('r7_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 7 показателю')),
                ('r8_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 8 показателю')),
                ('r8_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 8 показателю')),
                ('r9_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 9 показателю')),
                ('r9_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 9 показателю')),
                ('r10_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 10 показателю')),
                ('r10_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 10 показателю')),
                ('r11_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 11 показателю')),
                ('r11_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 11 показателю')),
                ('r12_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 12 показателю')),
                ('r12_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 12 показателю')),
                ('r13_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 13 показателю')),
                ('r13_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 13 показателю')),
                ('r14_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 14 показателю')),
                ('r14_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 14 показателю')),
                ('r15_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 15 показателю')),
                ('r15_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 15 показателю')),
                ('r16_place', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Место участника по 16 показателю')),
                ('r16_score', models.FloatField(blank=True, null=True, verbose_name='Очки участника по 16 показателю')),
            ],
            options={
                'verbose_name': 'Место участника по показателю',
                'verbose_name_plural': 'Места участников по показателям',
            },
        ),
        migrations.CreateModel(
            name='RCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(default=regional_competitions_2025.utils.current_year, verbose_name='Год проведения')),
            ],
            options={
                'verbose_name': 'Рейтинг РО',
                'verbose_name_plural': 'Рейтинги РО',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='RegionalR101',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('event_happened', models.BooleanField(verbose_name='Проведение акции')),
                ('document', models.FileField(blank=True, null=True, upload_to=regional_competitions_2025.utils.regional_comp_regulations_files_path, verbose_name='Скан документа, подтверждающего проведение акции')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 10 показателю - "Снежный Десант"',
                'verbose_name_plural': 'Отчеты по 10 показателю - "Снежный Десант',
            },
        ),
        migrations.CreateModel(
            name='RegionalR102',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('event_happened', models.BooleanField(verbose_name='Проведение акции')),
                ('document', models.FileField(blank=True, null=True, upload_to=regional_competitions_2025.utils.regional_comp_regulations_files_path, verbose_name='Скан документа, подтверждающего проведение акции')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 10 показателю - "Поклонимся великим тем годам"',
                'verbose_name_plural': 'Отчеты по 10 показателю - "Поклонимся великим тем годам"',
            },
        ),
        migrations.CreateModel(
            name='RegionalR4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 4 показателю',
                'verbose_name_plural': 'Отчеты по 4 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR4Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Наименование мероприятия')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала проведения мероприятия')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания проведения мероприятия')),
                ('regulations', models.FileField(blank=True, null=True, upload_to=regional_competitions_2025.utils.regional_comp_regulations_files_path, verbose_name='Положение о мероприятии')),
                ('is_interregional', models.BooleanField(default=False, verbose_name='Межрегиональное')),
                ('participants_number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество участников')),
                ('regional_r4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='regional_competitions_2025.regionalr4', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Мероприятие по 4 показателю',
                'verbose_name_plural': 'Мероприятия по 4 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 5 показателю',
                'verbose_name_plural': 'Отчеты по 5 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR5Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Наименование мероприятия')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала проведения мероприятия')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания проведения мероприятия')),
                ('regulations', models.FileField(blank=True, null=True, upload_to=regional_competitions_2025.utils.regional_comp_regulations_files_path, verbose_name='Положение о мероприятии')),
                ('participants_number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Общее количество участников')),
                ('ro_participants_number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество человек из своего региона, принявших участие в трудовом проекте')),
                ('regional_r5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='regional_competitions_2025.regionalr5', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Проект  5-го показателя',
                'verbose_name_plural': 'Проекты 5-го показателя',
            },
        ),
        migrations.CreateModel(
            name='RVerificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_regional_data', models.BooleanField(default=False, verbose_name='Данные РШ')),
                ('is_district_data', models.BooleanField(default=False, verbose_name='Данные ОШ')),
                ('is_central_data', models.BooleanField(default=False, verbose_name='Данные ЦШ')),
                ('report_number', models.BigIntegerField(verbose_name='Номер показателя')),
                ('report_id', models.BigIntegerField(verbose_name='ID отчета')),
                ('data', models.JSONField(verbose_name='Изменения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменений')),
                ('central_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_r_verification_logs', to='headquarters.centralheadquarter', verbose_name='Верифицирующий ЦШ')),
                ('district_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_r_verification_logs', to='headquarters.districtheadquarter', verbose_name='Верифицирующий ОШ')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_r_verification_logs', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_r_verification_logs', to=settings.AUTH_USER_MODEL, verbose_name='Верифицирующее лицо')),
            ],
            options={
                'verbose_name': 'Логи изменений отчета РШ',
                'verbose_name_plural': 'Логи изменений отчетов РШ',
            },
        ),
        migrations.CreateModel(
            name='RegionalR8',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 8 показателю',
                'verbose_name_plural': 'Отчеты по 8 показателю',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegionalR7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_place_events', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 1-ых мест (мероприятия)')),
                ('second_place_events', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 2-ых мест (мероприятия)')),
                ('third_place_events', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 3-их мест (мероприятия)')),
                ('first_place_projects', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 1-ых мест (трудовые проекты)')),
                ('second_place_projects', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 2-ых мест (трудовые проекты)')),
                ('third_place_projects', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во 3-их мест (трудовые проекты)')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_regional_r7', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 7 показателю',
                'verbose_name_plural': 'Отчеты по 7 показателю',
                'ordering': ['regional_headquarter'],
            },
        ),
        migrations.CreateModel(
            name='RegionalR5Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(blank=True, null=True, verbose_name='URL-адрес')),
                ('regional_r5_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions_2025.regionalr5event', verbose_name='Мероприятие')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalR4Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(blank=True, null=True, verbose_name='URL-адрес')),
                ('regional_r4_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions_2025.regionalr4event', verbose_name='Мероприятие')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalR2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('full_time_students', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество студентов очной формы обучения')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 2 показателю',
                'verbose_name_plural': 'Отчеты по 2 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR11',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('participants_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество человек, входящих в группу РО РСО в социальной сети "ВКонтакте"')),
                ('scan_file', models.FileField(blank=True, null=True, upload_to=regional_competitions_2025.utils.regional_comp_regulations_files_path, verbose_name='Скриншот численности группы РО РСО')),
                ('r_competition', models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 11 показателю',
                'verbose_name_plural': 'Отчеты по 11 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR102Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на социальные сети/электронные СМИ, подтверждающие проведение акции')),
                ('regional_r102', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions_2025.regionalr102', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Ссылка по 10 показателю - "Поклонимся великим тем годам"',
                'verbose_name_plural': 'Ссылки по 10 показателю - "Поклонимся великим тем годам',
            },
        ),
        migrations.CreateModel(
            name='RegionalR101Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на социальные сети/электронные СМИ, подтверждающие проведение акции')),
                ('regional_r101', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions_2025.regionalr101', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Ссылка по 10 показателю - "Снежный Десант"',
                'verbose_name_plural': 'Ссылки по 10 показателю - "Снежный Десант"',
            },
        ),
        migrations.AddConstraint(
            model_name='rcompetition',
            constraint=models.UniqueConstraint(fields=('year',), name='unique_year'),
        ),
        migrations.AddField(
            model_name='ranking',
            name='regional_headquarter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_regional_competitions_rankings', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб'),
        ),
        migrations.AddField(
            model_name='expertrole',
            name='central_headquarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_regional_experts', to='headquarters.centralheadquarter', verbose_name='Центральный штаб'),
        ),
        migrations.AddField(
            model_name='expertrole',
            name='district_headquarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_regional_experts', to='headquarters.districtheadquarter', verbose_name='Окружной штаб'),
        ),
        migrations.AddField(
            model_name='expertrole',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_regional_expert', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='chqrejectinglog',
            name='r_competition',
            field=models.ForeignKey(default=regional_competitions_2025.utils.get_last_rcompetition_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s', to='regional_competitions_2025.rcompetition', verbose_name='Рейтинг РО'),
        ),
        migrations.AddField(
            model_name='chqrejectinglog',
            name='regional_headquarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_r_rejecting_reasons', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб'),
        ),
        migrations.AddField(
            model_name='chqrejectinglog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_chq_rejecting_logs', to=settings.AUTH_USER_MODEL, verbose_name='Отклонившее лицо'),
        ),
        migrations.AddConstraint(
            model_name='regionalr8',
            constraint=models.UniqueConstraint(fields=('regional_headquarter',), name='unique_regional_hq'),
        ),
        migrations.AddConstraint(
            model_name='expertrole',
            constraint=models.CheckConstraint(check=models.Q(('central_headquarter__isnull', False), ('district_headquarter__isnull', False), _connector='OR'), name='only_one_headquarter'),
        ),
        migrations.AddConstraint(
            model_name='expertrole',
            constraint=models.CheckConstraint(check=models.Q(('central_headquarter__isnull', False), ('district_headquarter__isnull', False), _negated=True), name='not_central_and_district_headquarters'),
        ),
    ]
