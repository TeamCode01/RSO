# Generated by Django 4.2.7 on 2024-07-28 17:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import regional_competitions.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('headquarters', '0034_alter_usercentralheadquarterposition_position_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionalR101',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('event_happened', models.BooleanField(verbose_name='Проведение акции')),
                ('document', models.FileField(blank=True, null=True, upload_to=regional_competitions.utils.regional_comp_regulations_files_path, verbose_name='Скан документа, подтверждающего проведение акции')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 10 показателю - "Снежный Десант"',
                'verbose_name_plural': 'Отчеты по 10 показателю - "Снежный Десант',
            },
        ),
        migrations.CreateModel(
            name='RegionalR102',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('event_happened', models.BooleanField(verbose_name='Проведение акции')),
                ('document', models.FileField(blank=True, null=True, upload_to=regional_competitions.utils.regional_comp_regulations_files_path, verbose_name='Скан документа, подтверждающего проведение акции')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 10 показателю - "Поклонимся Великим годам"',
                'verbose_name_plural': 'Отчеты по 10 показателю - "Поклонимся Великим годам"',
            },
        ),
        migrations.CreateModel(
            name='RegionalR16',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('is_project', models.BooleanField(verbose_name='Наличие трудового проекта, в котором ЛО РСО одержал победу')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 16 показателю',
                'verbose_name_plural': 'Отчеты по 16 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 4 показателю',
                'verbose_name_plural': 'Отчеты по 4 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR4Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала проведения мероприятия')),
                ('end_date', models.DateField(verbose_name='Дата окончания проведения мероприятия')),
                ('regulations', models.FileField(blank=True, null=True, upload_to=regional_competitions.utils.regional_comp_regulations_files_path, verbose_name='Положение о мероприятии')),
                ('is_interregional', models.BooleanField(default=False, verbose_name='Межрегиональное')),
                ('participants_number', models.PositiveSmallIntegerField(default=0, verbose_name='Количество участников')),
                ('regional_r4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='regional_competitions.regionalr4', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Мероприятие по 4 показателю',
                'verbose_name_plural': 'Мероприятия по 4 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Проект по 5 показателю',
                'verbose_name_plural': 'Проекты по 5 показателям',
            },
        ),
        migrations.CreateModel(
            name='RegionalR5Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала проведения мероприятия')),
                ('end_date', models.DateField(verbose_name='Дата окончания проведения мероприятия')),
                ('ro_participants_number', models.PositiveIntegerField(verbose_name='Количество человек из своего региона, принявших участие в трудовом проекте')),
                ('regulations', models.FileField(blank=True, null=True, upload_to=regional_competitions.utils.regional_comp_regulations_files_path, verbose_name='Положение о мероприятии')),
                ('regional_r5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='regional_competitions.regionalr5', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Мероприятие по 5 показателю',
                'verbose_name_plural': 'Мероприятия по 5 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлен на верификацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('score', models.FloatField(default=0, verbose_name='Очки')),
                ('verified_by_chq', models.BooleanField(null=True, verbose_name='Верифицирован ЦШ')),
                ('verified_by_dhq', models.BooleanField(default=False, verbose_name='Верифицирован ОШ')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('regional_headquarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Отчет по 7 показателю',
                'verbose_name_plural': 'Отчеты по 7 показателю',
            },
        ),
        migrations.CreateModel(
            name='StatisticalRegionalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants_number', models.PositiveIntegerField(verbose_name='Количество членов регионального отделения')),
                ('employed_sso', models.PositiveIntegerField(verbose_name='Количество трудоустроенных ССО')),
                ('employed_spo', models.PositiveIntegerField(verbose_name='Количество трудоустроенных СПО')),
                ('employed_sop', models.PositiveIntegerField(verbose_name='Количество трудоустроенных СОП')),
                ('employed_smo', models.PositiveIntegerField(verbose_name='Количество трудоустроенных СМО')),
                ('employed_sservo', models.PositiveIntegerField(verbose_name='Количество трудоустроенных ССервО')),
                ('employed_ssho', models.PositiveIntegerField(verbose_name='Количество трудоустроенных ССхО')),
                ('employed_specialized_detachments', models.PositiveIntegerField(verbose_name='Количество трудоустроенных, профильные отряды')),
                ('employed_production_detachments', models.PositiveIntegerField(verbose_name='Количество трудоустроенных, производственные отряды')),
                ('employed_top', models.PositiveIntegerField(verbose_name='Количество трудоустроенных, ТОП')),
                ('regional_headquarter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Статистический отчет РШ',
                'verbose_name_plural': 'Статистические отчеты РШ',
            },
        ),
        migrations.CreateModel(
            name='RVerificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_regional_data', models.BooleanField(default=False, verbose_name='Данные РШ')),
                ('is_district_data', models.BooleanField(default=False, verbose_name='Данные ОШ')),
                ('is_central_data', models.BooleanField(default=False, verbose_name='Данные ЦШ')),
                ('report_number', models.PositiveSmallIntegerField(verbose_name='Номер показателя')),
                ('report_id', models.PositiveSmallIntegerField(verbose_name='ID отчета')),
                ('data', models.JSONField(verbose_name='Изменения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменений')),
                ('central_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='r_verification_logs', to='headquarters.centralheadquarter', verbose_name='Верифицирующий ЦШ')),
                ('district_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='r_verification_logs', to='headquarters.districtheadquarter', verbose_name='Верифицирующий ОШ')),
                ('regional_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='r_verification_logs', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r_verification_logs', to=settings.AUTH_USER_MODEL, verbose_name='Верифицирующее лицо')),
            ],
            options={
                'verbose_name': 'Логи изменений отчета РШ',
                'verbose_name_plural': 'Логи изменений отчетов РШ',
            },
        ),
        migrations.CreateModel(
            name='RegionalR7Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveSmallIntegerField(verbose_name='Призовое место')),
                ('regional_r7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='regional_competitions.regionalr7', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Данные по призовому месту по 7 показателю',
                'verbose_name_plural': 'Данные по призовым местам по 7 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR5Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='URL-адрес')),
                ('regional_r5_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions.regionalr5event', verbose_name='Мероприятие')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalR4Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='URL-адрес')),
                ('regional_r4_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions.regionalr4event', verbose_name='Мероприятие')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalR16Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Наименование проекта, в котором ЛСО РО одержал победу')),
                ('project_scale', models.CharField(choices=[('Всероссийский', 'Всероссийский'), ('Окружной', 'Окружной'), ('Межрегиональный', 'Межрегиональный')], max_length=30, verbose_name='Масштаб проекта')),
                ('regulations', models.FileField(blank=True, null=True, upload_to=regional_competitions.utils.regional_comp_regulations_files_path, verbose_name='Положение о проекте')),
                ('regional_r16', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='regional_competitions.regionalr16', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Проект по 16 показателю',
                'verbose_name_plural': 'Проекты по 16 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR16Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка на группу проекта в социальных сетях')),
                ('regional_r16_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions.regionalr16project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Ссылка по 16 показателю',
                'verbose_name_plural': 'Ссылки по 16 показателю',
            },
        ),
        migrations.CreateModel(
            name='RegionalR102Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка на социальные сети/электронные СМИ, подтверждающие проведение акции')),
                ('regional_r102', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions.regionalr102', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Ссылка по 10 показателю - "Поклонимся Великим годам"',
                'verbose_name_plural': 'Ссылки по 10 показателю - "Поклонимся Великим годам',
            },
        ),
        migrations.CreateModel(
            name='RegionalR101Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка на социальные сети/электронные СМИ, подтверждающие проведение акции')),
                ('regional_r101', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='regional_competitions.regionalr101', verbose_name='Отчет')),
            ],
            options={
                'verbose_name': 'Ссылка по 10 показателю - "Снежный Десант"',
                'verbose_name_plural': 'Ссылки по 10 показателю - "Снежный Десант"',
            },
        ),
        migrations.CreateModel(
            name='CHqRejectingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.PositiveSmallIntegerField(verbose_name='Номер показателя')),
                ('report_id', models.PositiveSmallIntegerField(verbose_name='Айди показателя')),
                ('reasons', models.JSONField(verbose_name='Причины отклонения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменений')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Отклонившее лицо')),
            ],
            options={
                'verbose_name': 'Причины отклонений ЦШ по отчету',
                'verbose_name_plural': 'Причины отклонений ЦШ по отчетам',
            },
        ),
    ]
