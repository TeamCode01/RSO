# Generated by Django 4.2.7 on 2024-02-23 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('headquarters', '0029_alter_centralheadquarter_name_alter_detachment_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0014_event_org_central_headquarter_event_org_detachment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupEventApplicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Участник группового мероприятия',
                'verbose_name_plural': 'Участники групповых мероприятий',
            },
        ),
        migrations.AlterModelOptions(
            name='multieventapplication',
            options={'ordering': ['-id'], 'verbose_name': 'Заявка на участие в многоэтапном мероприятии', 'verbose_name_plural': 'Заявки на участие в многоэтапных мероприятиях'},
        ),
        migrations.CreateModel(
            name='GroupEventApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания заявки')),
                ('applicants', models.ManyToManyField(blank=True, through='events.GroupEventApplicant', to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to=settings.AUTH_USER_MODEL, verbose_name='Автор заявки')),
                ('central_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.centralheadquarter', verbose_name='Центральный штаб заявки')),
                ('detachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.detachment', verbose_name='Отряд')),
                ('district_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.districtheadquarter', verbose_name='Окружной штаб заявки')),
                ('educational_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.educationalheadquarter', verbose_name='Образовательный штаб')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='events.event', verbose_name='Мероприятие')),
                ('local_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.localheadquarter', verbose_name='Местный штаб')),
                ('regional_headquarter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applications', to='headquarters.regionalheadquarter', verbose_name='Региональный штаб')),
            ],
            options={
                'verbose_name': 'Заявка на участие в групповом мероприятии',
                'verbose_name_plural': 'Заявки на участие в групповых мероприятиях',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='groupeventapplicant',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_applicants', to='events.groupeventapplication', verbose_name='Заявка на участие'),
        ),
        migrations.AddField(
            model_name='groupeventapplicant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_event_applicant', to=settings.AUTH_USER_MODEL, verbose_name='Участник'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'central_headquarter'), name='group_unique_central_headquarter_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'district_headquarter'), name='group_unique_district_headquarter_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'regional_headquarter'), name='group_unique_regional_headquarter_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'local_headquarter'), name='group_unique_local_headquarter_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'educational_headquarter'), name='group_unique_educational_headquarter_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplication',
            constraint=models.UniqueConstraint(fields=('event', 'detachment'), name='group_unique_detachment_application'),
        ),
        migrations.AddConstraint(
            model_name='groupeventapplicant',
            constraint=models.UniqueConstraint(fields=('application', 'user'), name='unique_group_event_application_participant'),
        ),
    ]
